name: Build and Publish JAR

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Extract version and artifactId from pom.xml
        run: |
          echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_ENV
          echo "ARTIFACT_ID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec)" >> $GITHUB_ENV

      - name: Check if version has changed
        id: check_version
        run: |
          git fetch --tags
          git tag -l | grep $VERSION && exit 1 || exit 0
        continue-on-error: true

      - name: Build with Maven
        run: mvn clean package
        if: steps.check_version.outcome == 'success'

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
        if: steps.check_version.outcome == 'success'

      - name: Upload JAR to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar
          asset_name: ${{ env.ARTIFACT_ID }}-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
        if: steps.check_version.outcome == 'success'
